[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "SONA_NLP_Python",
    "section": "",
    "text": "Introduction\n\npip install nltk\n\nRequirement already satisfied: nltk in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (3.8.1)\nRequirement already satisfied: click in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from nltk) (8.1.3)\nRequirement already satisfied: regex>=2021.8.3 in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from nltk) (2023.8.8)\nRequirement already satisfied: tqdm in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from nltk) (4.66.1)\nRequirement already satisfied: joblib in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from nltk) (1.3.2)\n\n\nNote: you may need to restart the kernel to use updated packages.\n\n\n\npip install requests matplotlib seaborn\n\nRequirement already satisfied: requests in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (2.28.1)\nRequirement already satisfied: matplotlib in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (3.8.0)\nRequirement already satisfied: seaborn in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (0.13.0)\nRequirement already satisfied: certifi>=2017.4.17 in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from requests) (2022.6.15)\nRequirement already satisfied: charset-normalizer<3,>=2 in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from requests) (2.1.1)\nRequirement already satisfied: urllib3<1.27,>=1.21.1 in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from requests) (1.26.11)\nRequirement already satisfied: idna<4,>=2.5 in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from requests) (3.3)\nRequirement already satisfied: contourpy>=1.0.1 in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from matplotlib) (1.1.1)\nRequirement already satisfied: pillow>=6.2.0 in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from matplotlib) (10.0.1)\nRequirement already satisfied: kiwisolver>=1.0.1 in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from matplotlib) (1.4.5)\nRequirement already satisfied: fonttools>=4.22.0 in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from matplotlib) (4.43.0)\nRequirement already satisfied: cycler>=0.10 in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from matplotlib) (0.12.0)\nRequirement already satisfied: numpy<2,>=1.21 in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from matplotlib) (1.23.2)\nRequirement already satisfied: packaging>=20.0 in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from matplotlib) (21.3)\nRequirement already satisfied: python-dateutil>=2.7 in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from matplotlib) (2.8.2)\nRequirement already satisfied: pyparsing>=2.3.1 in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from matplotlib) (3.0.9)\nRequirement already satisfied: pandas>=1.2 in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from seaborn) (2.1.1)\n\n\nRequirement already satisfied: tzdata>=2022.1 in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from pandas>=1.2->seaborn) (2023.3)\nRequirement already satisfied: pytz>=2020.1 in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from pandas>=1.2->seaborn) (2023.3.post1)\nRequirement already satisfied: six>=1.5 in /opt/anaconda3/envs/firstEnv/lib/python3.10/site-packages (from python-dateutil>=2.7->matplotlib) (1.16.0)\n\n\nNote: you may need to restart the kernel to use updated packages.\n\n\n\nimport sys\nprint(sys.executable)\n\n/opt/anaconda3/envs/firstEnv/bin/python\n\n\n\nimport os\nimport pandas as pd\nimport nltk\nimport re\nfrom nltk.tokenize import sent_tokenize\n\nnltk.download('punkt')\n\nfolder_path = 'speeches'  # Ensure this is your correct folder path\nfiles = os.listdir(folder_path)\nfiles = sorted([file for file in files if os.path.isfile(os.path.join(folder_path, file)) and file.endswith('.txt')])\n\npresident_names = []\n\n# Updated regex pattern to handle more cases\npattern = r'_(.+?)\\.txt'  # Non-greedy match to get the president name\n\nfor file in files:\n    match = re.search(pattern, file)\n    if match:\n        president_name = match.group(1)\n        # Remove the \"_2\" suffix from the president names here\n        cleaned_president_name = president_name.replace('_2', '')\n        president_names.append(cleaned_president_name)\n    else:\n        print(f\"Warning: No match found in filename: {file}\")\n        president_names.append('Unknown')  # Placeholder for missing names\n\n# Check the lengths of files and president_names lists\nif len(files) != len(president_names):\n    print(f\"Warning: Number of files ({len(files)}) does not match number of president names ({len(president_names)})\")\n\n# Initialize dataframe with appropriate column names\ndf = pd.DataFrame(columns=['Presidents', 'Sentences'])\n\n# Iterate over all files and extract sentences\nfor file_index in range(len(files)):\n    file_path = os.path.join(folder_path, files[file_index])\n    with open(file_path, 'r', encoding='utf-8') as file:\n        lines = file.readlines()[2:]  # Adjust if your files have a different structure\n\n    text = ' '.join(lines)\n    sentences = sent_tokenize(text)\n    cleaned_sentences = [sentence.replace('\\n', '') for sentence in sentences]\n\n    current_president = president_names[file_index]\n    dftemp = pd.DataFrame({'Presidents': [current_president] * len(cleaned_sentences), 'Sentences': cleaned_sentences})\n    df = pd.concat([df, dftemp], axis=0, ignore_index=True)\n\ndf.reset_index(drop=True, inplace=True)\n\n# Save the DataFrame to a CSV file\ndf.to_csv('finalSentence.csv', index=False)\n\n[nltk_data] Downloading package punkt to /Users/taahir/nltk_data...\n[nltk_data]   Package punkt is already up-to-date!\n\n\n\ndata = pd.read_csv(\"finalSentence.csv\")\n\n\n\nEDA\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Set the style of the visualization\nsns.set(style=\"whitegrid\")\n\n# Group the data by president and count the number of sentences for each\nsentence_counts = data['Presidents'].value_counts()\n\n# Create a bar plot of the number of sentences per president\nplt.figure(figsize=(10, 6))\nsns.barplot(x=sentence_counts.index, y=sentence_counts.values, palette=\"viridis\")\n\n# Add labels and title\nplt.xlabel('Presidents')\nplt.ylabel('Number of Sentences')\nplt.title('Number of Sentences per President')\nplt.xticks(rotation=45)\nplt.show()\n\n/var/folders/bb/cffyhjy902vdgk_x4747t7s80000gn/T/ipykernel_32420/3895530812.py:12: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.barplot(x=sentence_counts.index, y=sentence_counts.values, palette=\"viridis\")\n\n\n\n\n\n\n# Calculate the length in words of each sentence\ndata['Sentence_Length'] = data['Sentences'].apply(lambda x: len(x.split()))\n\n# Group by president and calculate the average sentence length\naverage_length = data.groupby('Presidents')['Sentence_Length'].mean().sort_values(ascending=False)\n\npalette = sns.color_palette(\"viridis\", n_colors=len(sentence_counts))\n\n# Create a mapping of president to color based on the order in sentence_counts\ncolor_mapping = {president: palette[i] for i, president in enumerate(sentence_counts.index)}\n\n# Get colors for the presidents in the order of average_length\nbar_colors = [color_mapping[president] for president in average_length.index]\n\n# Create a bar plot of the average sentence length per president with consistent colors\nplt.figure(figsize=(10, 6))\nsns.barplot(x=average_length.index, y=average_length.values, palette=bar_colors)\n\n# Add labels and title\nplt.xlabel('Presidents')\nplt.ylabel('Average Sentence Length (in words)')\nplt.title('Average Sentence Length per President')\nplt.xticks(rotation=45)\nplt.show()\n\n/var/folders/bb/cffyhjy902vdgk_x4747t7s80000gn/T/ipykernel_32420/566828375.py:17: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.barplot(x=average_length.index, y=average_length.values, palette=bar_colors)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  }
]